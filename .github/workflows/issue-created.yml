name: "Test Auto Comment Workflow"

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  comment:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write   # required to comment on PRs

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Read greeting message
        id: greeting
        run: |
          # Store file contents in output
          content=$(cat .github/ISSUE_GREETING.md)
          # Escape % and newlines for GitHub Actions output
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "text=$content" >> $GITHUB_OUTPUT

      - name: Add a comment to pull request (for testing)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = context.payload.pull_request.number;
            const pr_author = context.payload.pull_request.user.login;
            const repo_owner = context.repo.owner;
            const message = process.env.GREETING;

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: `[TEST MODE] ðŸ‘‹ Workflow ran successfully!\n\n${message}`
              });
              core.info(`Commented on PR #${pr_number} by ${pr_author}`);
        env:
          GREETING: ${{ steps.greeting.outputs.text }}
